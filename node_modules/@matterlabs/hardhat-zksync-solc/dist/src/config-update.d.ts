import { SolcConfig, SolcUserConfig } from 'hardhat/types';
export interface SolcConfigData {
    compiler: SolcConfig;
    file?: string;
}
export interface SolcUserConfigUpdater {
    suituble(_solcUserConfig: SolcUserConfig[] | Map<string, SolcUserConfig>, _file?: string): boolean;
    update(_compiler: SolcConfig, _solcUserConfig: SolcUserConfig[] | Map<string, SolcUserConfig>, _file?: string): void;
}
export declare class OverrideCompilerSolcUserConfigUpdater implements SolcUserConfigUpdater {
    suituble(_solcUserConfig: SolcUserConfig[] | Map<string, SolcUserConfig>, _file?: string): boolean;
    update(_compiler: SolcConfig, _userConfigCompilers: Map<string, SolcUserConfig>, _file: string): void;
}
export declare class CompilerSolcUserConfigUpdater implements SolcUserConfigUpdater {
    suituble(solcUserConfig: SolcUserConfig[] | Map<string, SolcUserConfig>, _file?: string): boolean;
    update(_compiler: SolcConfig, _userConfigCompilers: SolcUserConfig[], _file?: string): void;
}
//# sourceMappingURL=config-update.d.ts.map